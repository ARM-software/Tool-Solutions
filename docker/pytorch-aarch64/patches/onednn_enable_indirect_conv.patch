diff --git a/src/cpu/aarch64/acl_convolution_utils.cpp b/src/cpu/aarch64/acl_convolution_utils.cpp
index 53b1e2c82a..3fb4121ebb 100644
--- a/src/cpu/aarch64/acl_convolution_utils.cpp
+++ b/src/cpu/aarch64/acl_convolution_utils.cpp
@@ -1,5 +1,5 @@
 /*******************************************************************************
-* Copyright 2020-2023 Arm Ltd. and affiliates
+* Copyright 2020-2024 Arm Ltd. and affiliates
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
@@ -307,16 +307,8 @@ status_t init_conf_indirect_gemm(acl_conv_conf_t &acp, memory_desc_t &src_md,
         const primitive_attr_t &attr) {
     if (weights_md.ndims != 4) return status::unimplemented;
 
-    // Indirect is slower for small convolution kernels
-    if (weights_md.dims[2] == 1 && weights_md.dims[3] == 1)
-        return status::unimplemented;
-
     CHECK(acl_init_conf(acp, src_md, weights_md, dst_md, bias_md, cd, attr));
 
-    // Indirect is slower than gemm for low thread counts, except for fast math
-    if (dnnl_get_max_threads() < 28 && !acp.fast_math)
-        return status::unimplemented;
-
     // If we do not need to pad input channels for fast math mode then it would
     // be faster to run convolution with im2row instead of using indirect kernel
     int block_by = arm_compute::block_by(acp.weights_info.weight_format());
