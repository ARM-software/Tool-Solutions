/*GENERATED*/// ************************************************
/*GENERATED*/// * Copyright 2013-2021 ARM Limited. All rights reserved.
/*GENERATED*/// * This file is autogenerated by BasePlatformLISAGenerator.py. Please not edit directly.
/*GENERATED*/// ************************************************
/*GENERATED*/
/*GENERATED*/component FVP_Base_AEMv8A_AEMv8A_MultiGIC
/*GENERATED*/{
/*GENERATED*/    properties
/*GENERATED*/    {
/*GENERATED*/        version = "unreleased";
/*GENERATED*/        component_type = "System";
/*GENERATED*/        description = "Base Platform Compute Subsystem for ARMAEMv8AMPCT and ARMAEMv8AMPCT";
/*GENERATED*/        
/*GENERATED*/    }
/*GENERATED*/    
/*GENERATED*/    composition
/*GENERATED*/    {
/*GENERATED*/        // **********************************************************************
/*GENERATED*/        // NOTE construction order is _VERY_ important
/*GENERATED*/        //
/*GENERATED*/        // Base_PowerController drives values at reset into the cluster(s)
/*GENERATED*/        // that _must_ be read at reset.  This means that it must be reset _before_ the
/*GENERATED*/        // cluster(s).
/*GENERATED*/        //
/*GENERATED*/        // **********************************************************************
/*GENERATED*/        
/*GENERATED*/        address_map_terminator: PVBusModifier();
/*GENERATED*/        
/*GENERATED*/        // Base Platform Peripherals
/*GENERATED*/        bp: BasePlatformPeripherals(daughter_led_count = 8,
/*GENERATED*/            daughter_user_switch_count = 8,
/*GENERATED*/            has_rme = false,
/*GENERATED*/            variant.default = 1,
/*GENERATED*/            proc_id0.default = 0x00000477,
/*GENERATED*/            proc_id1.default = 0x00000477,
/*GENERATED*/            proc_id2 = 0xff000000,
/*GENERATED*/            proc_id3 = 0xff000000,
/*GENERATED*/            cpu_name="AEMv8A-AEMv8A MultiGIC Base FVP");
/*GENERATED*/        
/*GENERATED*/        cci400: CCI400(cache_state_modelled=cache_state_modelled,
/*GENERATED*/            is_downstream_domain_boundary_for_far_atomic=consume_far_atomics_at_last_interconnect,
/*GENERATED*/            broadcastcachemain=0x0,
/*GENERATED*/            barrierterminate=0x7,
/*GENERATED*/            bufferableoverride=0x0,
/*GENERATED*/            periphbase=0x2C000000,
/*GENERATED*/            revision="r0p0",
/*GENERATED*/            acchannelen = 0x18);
/*GENERATED*/        
/*GENERATED*/        clockdivider0: ClockDivider("mul"=1,
/*GENERATED*/            "div"=1);
/*GENERATED*/        
/*GENERATED*/        clockdivider1: ClockDivider("mul"=1,
/*GENERATED*/            "div"=1);
/*GENERATED*/        
/*GENERATED*/        // After power controller
/*GENERATED*/        cluster0: AEMvACT(CLUSTER_ID = 0,
/*GENERATED*/            "GICDISABLE"=false,
/*GENERATED*/            "icache-state_modelled"=cache_state_modelled,
/*GENERATED*/            "dcache-state_modelled"=cache_state_modelled,
/*GENERATED*/            "PERIPHBASE"=0x2C000000,
/*GENERATED*/            "internal_vgic"= false,
/*GENERATED*/            "has-gicv4.1" = has_gicv4_1,
/*GENERATED*/            "gicv3.gicv2-only" = gicv2_only,
/*GENERATED*/            "gic.GICD-offset".default=0x40000,
/*GENERATED*/            "gic.GICC-offset".default=0x00000,
/*GENERATED*/            "gic.GICH-offset".default=0x10000,
/*GENERATED*/            "gic.GICH-other-CPU-offset".default=0x40000,
/*GENERATED*/            "gic.GICV-offset".default=0x2F000,
/*GENERATED*/            "gic.PERIPH-size".default=0x40000,
/*GENERATED*/            "DBGROMADDR" = 0x22000000,
/*GENERATED*/            "DBGROMADDRV" = true,
/*GENERATED*/            BROADCASTINNER=true,
/*GENERATED*/            BROADCASTOUTER=true,
/*GENERATED*/            BROADCASTCACHEMAINT=true,
/*GENERATED*/            "NUM_CORES"=NUM_CORES0,
/*GENERATED*/            "cpu0.semihosting-enable" =semihosting_enable,
/*GENERATED*/            "cpu0.semihosting-heap_base".default =0x00000000,
/*GENERATED*/            "cpu0.semihosting-heap_limit".default =0xff000000,
/*GENERATED*/            "cpu0.semihosting-stack_base".default =0xffff0000,
/*GENERATED*/            "cpu0.semihosting-stack_limit".default =0xff000000,
/*GENERATED*/            "cpu1.semihosting-enable" =semihosting_enable,
/*GENERATED*/            "cpu1.semihosting-heap_base".default =0x00000000,
/*GENERATED*/            "cpu1.semihosting-heap_limit".default =0xff000000,
/*GENERATED*/            "cpu1.semihosting-stack_base".default =0xffff0000,
/*GENERATED*/            "cpu1.semihosting-stack_limit".default =0xff000000,
/*GENERATED*/            "cpu2.semihosting-enable" =semihosting_enable,
/*GENERATED*/            "cpu2.semihosting-heap_base".default =0x00000000,
/*GENERATED*/            "cpu2.semihosting-heap_limit".default =0xff000000,
/*GENERATED*/            "cpu2.semihosting-stack_base".default =0xffff0000,
/*GENERATED*/            "cpu2.semihosting-stack_limit".default =0xff000000,
/*GENERATED*/            "cpu3.semihosting-enable" =semihosting_enable,
/*GENERATED*/            "cpu3.semihosting-heap_base".default =0x00000000,
/*GENERATED*/            "cpu3.semihosting-heap_limit".default =0xff000000,
/*GENERATED*/            "cpu3.semihosting-stack_base".default =0xffff0000,
/*GENERATED*/            "cpu3.semihosting-stack_limit".default =0xff000000);
/*GENERATED*/        
/*GENERATED*/        cluster0_labeller: Labeller("label" = 9);
/*GENERATED*/        
/*GENERATED*/        // After power controller
/*GENERATED*/        cluster1: AEMvACT(CLUSTER_ID = 1,
/*GENERATED*/            "GICDISABLE"=false,
/*GENERATED*/            "icache-state_modelled"=cache_state_modelled,
/*GENERATED*/            "dcache-state_modelled"=cache_state_modelled,
/*GENERATED*/            "PERIPHBASE"=0x2C000000,
/*GENERATED*/            "internal_vgic"= false,
/*GENERATED*/            "has-gicv4.1" = has_gicv4_1,
/*GENERATED*/            "gicv3.gicv2-only" = gicv2_only,
/*GENERATED*/            "gic.GICD-offset".default=0x40000,
/*GENERATED*/            "gic.GICC-offset".default=0x00000,
/*GENERATED*/            "gic.GICH-offset".default=0x10000,
/*GENERATED*/            "gic.GICH-other-CPU-offset".default=0x40000,
/*GENERATED*/            "gic.GICV-offset".default=0x2F000,
/*GENERATED*/            "gic.PERIPH-size".default=0x40000,
/*GENERATED*/            "DBGROMADDR" = 0x22000000,
/*GENERATED*/            "DBGROMADDRV" = true,
/*GENERATED*/            BROADCASTINNER=true,
/*GENERATED*/            BROADCASTOUTER=true,
/*GENERATED*/            BROADCASTCACHEMAINT=true,
/*GENERATED*/            "NUM_CORES"=NUM_CORES1,
/*GENERATED*/            "cpu0.semihosting-enable" =semihosting_enable,
/*GENERATED*/            "cpu0.semihosting-heap_base".default =0x00000000,
/*GENERATED*/            "cpu0.semihosting-heap_limit".default =0xff000000,
/*GENERATED*/            "cpu0.semihosting-stack_base".default =0xffff0000,
/*GENERATED*/            "cpu0.semihosting-stack_limit".default =0xff000000,
/*GENERATED*/            "cpu1.semihosting-enable" =semihosting_enable,
/*GENERATED*/            "cpu1.semihosting-heap_base".default =0x00000000,
/*GENERATED*/            "cpu1.semihosting-heap_limit".default =0xff000000,
/*GENERATED*/            "cpu1.semihosting-stack_base".default =0xffff0000,
/*GENERATED*/            "cpu1.semihosting-stack_limit".default =0xff000000,
/*GENERATED*/            "cpu2.semihosting-enable" =semihosting_enable,
/*GENERATED*/            "cpu2.semihosting-heap_base".default =0x00000000,
/*GENERATED*/            "cpu2.semihosting-heap_limit".default =0xff000000,
/*GENERATED*/            "cpu2.semihosting-stack_base".default =0xffff0000,
/*GENERATED*/            "cpu2.semihosting-stack_limit".default =0xff000000,
/*GENERATED*/            "cpu3.semihosting-enable" =semihosting_enable,
/*GENERATED*/            "cpu3.semihosting-heap_base".default =0x00000000,
/*GENERATED*/            "cpu3.semihosting-heap_limit".default =0xff000000,
/*GENERATED*/            "cpu3.semihosting-stack_base".default =0xffff0000,
/*GENERATED*/            "cpu3.semihosting-stack_limit".default =0xff000000);
/*GENERATED*/        
/*GENERATED*/        cluster1_labeller: Labeller("label" = 9);
/*GENERATED*/        
/*GENERATED*/        cs_rom: DebugROM(manufacturer_revision_number = 0x0,
/*GENERATED*/            customer_modified = 0x0,
/*GENERATED*/            revision = 0x0,
/*GENERATED*/            part_number = 0x0,
/*GENERATED*/            entry_0 = 0x02000000,
/*GENERATED*/            entry_1 = 0x03000000,
/*GENERATED*/            entry_2 = 0x00000000,
/*GENERATED*/            entry_3 = 0x00000000,
/*GENERATED*/            entry_4 = 0x00000000,
/*GENERATED*/            entry_5 = 0x00000000,
/*GENERATED*/            entry_6 = 0x00000000,
/*GENERATED*/            entry_7 = 0x00000000,
/*GENERATED*/            entry_8 = 0x00000000,
/*GENERATED*/            entry_9 = 0x00000000,
/*GENERATED*/            entry_10 = 0x00000000,
/*GENERATED*/            entry_11 = 0x00000000,
/*GENERATED*/            entry_12 = 0x00000000,
/*GENERATED*/            entry_13 = 0x00000000,
/*GENERATED*/            entry_14 = 0x00000000,
/*GENERATED*/            entry_15 = 0x00000000,
/*GENERATED*/            entry_16 = 0x00000000,
/*GENERATED*/            entry_17 = 0x00000000,
/*GENERATED*/            entry_18 = 0x00000000,
/*GENERATED*/            entry_19 = 0x00000000,
/*GENERATED*/            entry_20 = 0x00000000,
/*GENERATED*/            entry_21 = 0x00000000,
/*GENERATED*/            entry_22 = 0x00000000,
/*GENERATED*/            entry_23 = 0x00000000,
/*GENERATED*/            entry_24 = 0x00000000,
/*GENERATED*/            entry_25 = 0x00000000,
/*GENERATED*/            entry_26 = 0x00000000,
/*GENERATED*/            entry_27 = 0x00000000,
/*GENERATED*/            entry_28 = 0x00000000,
/*GENERATED*/            entry_29 = 0x00000000,
/*GENERATED*/            entry_30 = 0x00000000,
/*GENERATED*/            entry_31 = 0x00000000);
/*GENERATED*/        
/*GENERATED*/        // Debug access port.
/*GENERATED*/        dap: DebugAccessPort("ap0_rom_base_address" = 0x00000000 /* Debug bus base */,
/*GENERATED*/            "ap0_has_debug_rom" = true);
/*GENERATED*/        
/*GENERATED*/        dapmemlogger: PVBusLogger();
/*GENERATED*/        
/*GENERATED*/        dbg_pvbusdecoder: PVBusDecoder();
/*GENERATED*/        
/*GENERATED*/        elfloader: ElfLoader();
/*GENERATED*/        
/*GENERATED*/        gic_iri: MultiGIC("reg-base".default = 0x2f000000,
/*GENERATED*/            "ITS-count".default = 0,
/*GENERATED*/            "gic0-CPU-affinities" = "0.0.0.0",
/*GENERATED*/            "gic1-CPU-affinities" = "0.0.0.1",
/*GENERATED*/            "gic2-CPU-affinities" = "0.0.0.2",
/*GENERATED*/            "gic3-CPU-affinities" = "0.0.0.3",
/*GENERATED*/            "gic4-CPU-affinities" = "0.0.1.0",
/*GENERATED*/            "gic5-CPU-affinities" = "0.0.1.1",
/*GENERATED*/            "gic6-CPU-affinities" = "0.0.1.2",
/*GENERATED*/            "gic7-CPU-affinities" = "0.0.1.3",
/*GENERATED*/            "gic8-CPU-affinities" = "0.0.0.0",
/*GENERATED*/            "gic9-CPU-affinities" = "0.0.0.0",
/*GENERATED*/            "gic10-CPU-affinities" = "0.0.0.0",
/*GENERATED*/            "gic11-CPU-affinities" = "0.0.0.0",
/*GENERATED*/            "gic12-CPU-affinities" = "0.0.0.0",
/*GENERATED*/            "gic13-CPU-affinities" = "0.0.0.0",
/*GENERATED*/            "gic14-CPU-affinities" = "0.0.0.0",
/*GENERATED*/            "gic15-CPU-affinities" = "0.0.0.0");
/*GENERATED*/        
/*GENERATED*/        mmdbg_pvbusdecoder: PVBusDecoder();
/*GENERATED*/        
/*GENERATED*/        // Must be reset before clusters
/*GENERATED*/        pctl: Base_PowerController("CPU-affinities".default = "0.0.0.0, 0.0.0.1, 0.0.0.2, 0.0.0.3, 0.0.1.0, 0.0.1.1, 0.0.1.2, 0.0.1.3",
/*GENERATED*/            "Affinity-shifted".default =false,
/*GENERATED*/            "use_in_cluster_ppu".default = false,
/*GENERATED*/            "CPU-available-mask" = (((1 << NUM_CORES0) - 1) << 0) | (((1 << NUM_CORES1) - 1) << 4));
/*GENERATED*/        
/*GENERATED*/        v8ect: v8EmbeddedCrossTrigger_Matrix();
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/    }
/*GENERATED*/    
/*GENERATED*/    resources
/*GENERATED*/    {
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/    PARAMETER { name("cache_state_modelled"), default(true), type(bool), description("Enabled d-cache and i-cache state for all components")} cache_state_modelled;
/*GENERATED*/        
/*GENERATED*/    PARAMETER { description("Debug authentication signal spiden"),  type(bool), default(true) } spiden;
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/    PARAMETER { description("Debug authentication signal spniden"), type(bool), default(true) } spniden;
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/    PARAMETER { description("Debug authentication signal dbgen"),   type(bool), default(true) } dbgen;
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/    PARAMETER { description("Debug authentication signal niden"),   type(bool), default(true) } niden;
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/    PARAMETER { name("consume_far_atomics_at_last_interconnect"), default(true), type(bool), description("Configures whether CCI400 interconnect will be at the domain bounday for far atomics. If yes, atomics will be consumed by this interconnect.")} consume_far_atomics_at_last_interconnect;
/*GENERATED*/        
/*GENERATED*/        PARAMETER {
/*GENERATED*/            name("cluster0.NUM_CORES"),
/*GENERATED*/            description("Number of cores in cluster0"),
/*GENERATED*/            type(int),
/*GENERATED*/            default(4), min(1), max(4)
/*GENERATED*/        } NUM_CORES0;
/*GENERATED*/        
/*GENERATED*/        PARAMETER {
/*GENERATED*/            name("cluster1.NUM_CORES"),
/*GENERATED*/            description("Number of cores in cluster1"),
/*GENERATED*/            type(int),
/*GENERATED*/            default(4), min(0), max(4)
/*GENERATED*/        } NUM_CORES1;
/*GENERATED*/        
/*GENERATED*/    PARAMETER { name("gicv3.gicv2-only"), default(false), type(bool), description("When using the GICv3 model, pretend to be a GICv2 system.")} gicv2_only;
/*GENERATED*/        
/*GENERATED*/    PARAMETER { name("has-gicv4.1"), default(false), type(bool), description("Enable GICv4.1 functionality; when false the component is inactive.")} has_gicv4_1;
/*GENERATED*/        
/*GENERATED*/        PARAMETER {
/*GENERATED*/            name("semihosting-enable"),
/*GENERATED*/            description("Enable semihosting for all cores"),
/*GENERATED*/            type(bool),
/*GENERATED*/            default(true)
/*GENERATED*/        } semihosting_enable;
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/    }
/*GENERATED*/    
/*GENERATED*/    internal port<PVBus> pvbus_address_map;
/*GENERATED*/    internal port<Signal> gic_distributor_spi_in[960];
/*GENERATED*/    internal port<Signal> cluster0_irqs[224];
/*GENERATED*/    internal port<Signal> cluster0_l2reset;
/*GENERATED*/    internal port<Signal> cluster1_irqs[224];
/*GENERATED*/    internal port<Signal> cluster1_l2reset;
/*GENERATED*/    
/*GENERATED*/    //
/*GENERATED*/    // All SPI (Shared Peripheral Interrupts) pins first go here, we then fan
/*GENERATED*/    // them out to the external VGIC or the cores themselves so that we only
/*GENERATED*/    // have to get the wiring right here.
/*GENERATED*/    //
/*GENERATED*/    internal port<Signal> spis[224] {
/*GENERATED*/        // The cluster(s) only have 224 interrupts so we cannot directly
/*GENERATED*/        // bind them.   If the external gic is enabled then we are OK if we have
/*GENERATED*/        // more interrupts.   So we use another bounce to route them.
/*GENERATED*/        behavior setValue(unsigned port_index_, sg::Signal::State s_) {
/*GENERATED*/            if (port_index_ >= 224)
/*GENERATED*/            {
/*GENERATED*/                if (s_ == sg::Signal::Clear)
/*GENERATED*/                {
/*GENERATED*/                    return; // ignore the clear signal as it might just be startup
/*GENERATED*/                }
/*GENERATED*/                
/*GENERATED*/                std::ostringstream os;
/*GENERATED*/                os << getHierarchicalName()
/*GENERATED*/                << ": Attempt to raise the SPI (IRQ) " << port_index_ << " (which is interrupt id "
/*GENERATED*/                    << (port_index_ + 32) << ")" << std::endl
/*GENERATED*/                << "        However, the port is "
/*GENERATED*/                << "out-of-range of the maximum number of SPIs (" << 224 << ")" << std::endl;
/*GENERATED*/                message(os.str(), MSG_WARNING);
/*GENERATED*/            }
/*GENERATED*/            
/*GENERATED*/            if (port_index_ < 960 // size of port on gic.
/*GENERATED*/                && gic_distributor_spi_in[port_index_].setValue.implemented())
/*GENERATED*/            {
/*GENERATED*/                gic_distributor_spi_in[port_index_].setValue(s_);
/*GENERATED*/            }
/*GENERATED*/        }
/*GENERATED*/    }
/*GENERATED*/    
/*GENERATED*/    connection
/*GENERATED*/    {
/*GENERATED*/        // The main memory bus may be passed through several components for
/*GENERATED*/        // them to filter out their register files.
/*GENERATED*/        cci400.pvbus_m => self.pvbus_address_map;
/*GENERATED*/        self.pvbus_address_map => gic_iri.pvbus_s;
/*GENERATED*/        gic_iri.pvbus_filtermiss_m => bp.pvbus_address_map_s;
/*GENERATED*/        bp.pvbus_address_map_m => address_map_terminator.pvbus_s;
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/        elfloader.pvbus_m => self.pvbus_address_map;
/*GENERATED*/        
/*GENERATED*/        // DAP connections
/*GENERATED*/        bp.cpu_clk => dap.clock;
/*GENERATED*/        dap.ap_pvbus_m[0] => dbg_pvbusdecoder.pvbus_s;
/*GENERATED*/        dap.ap_pvbus_m[1] => dapmemlogger.pvbus_s;
/*GENERATED*/        dapmemlogger.pvbus_m => self.pvbus_address_map;
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/        // Memory mapped debug
/*GENERATED*/        bp.cpu_memorymapped_debug => mmdbg_pvbusdecoder.pvbus_s;
/*GENERATED*/        
/*GENERATED*/        bp.cpu_clk => cci400.clk_in;
/*GENERATED*/        bp.cpu_clk => clockdivider0.clk_in;
/*GENERATED*/        bp.cpu_clk => clockdivider1.clk_in;
/*GENERATED*/        bp.cpu_event => cluster0.event;
/*GENERATED*/        bp.cpu_event => cluster1.event;
/*GENERATED*/        bp.interrupts => self.spis;
/*GENERATED*/        bp.powerctl_pvbus => pctl.pvbus_s;
/*GENERATED*/        bp.pvbus_virtio_m => cci400.pvbus_s_ace_lite_plus_dvm_2;
/*GENERATED*/        bp.reference_cntvalueb => cluster0.cntvalueb;
/*GENERATED*/        bp.reference_cntvalueb => cluster1.cntvalueb;
/*GENERATED*/        bp.system_reset_req => pctl.system_reset_req;
/*GENERATED*/        cci400.evntcntoverflow[0] => self.spis[118];
/*GENERATED*/        cci400.evntcntoverflow[1] => self.spis[119];
/*GENERATED*/        cci400.evntcntoverflow[2] => self.spis[120];
/*GENERATED*/        cci400.evntcntoverflow[3] => self.spis[121];
/*GENERATED*/        cci400.evntcntoverflow[4] => self.spis[122];
/*GENERATED*/        clockdivider0.clk_out => cluster0.clk_in;
/*GENERATED*/        clockdivider1.clk_out => cluster1.clk_in;
/*GENERATED*/        cluster0.CNTHPIRQ[0] => gic_iri.ppi_in_0[10]; // Interrupt ID = 26
/*GENERATED*/        cluster0.CNTHPIRQ[1] => gic_iri.ppi_in_1[10]; // Interrupt ID = 26
/*GENERATED*/        cluster0.CNTHPIRQ[2] => gic_iri.ppi_in_2[10]; // Interrupt ID = 26
/*GENERATED*/        cluster0.CNTHPIRQ[3] => gic_iri.ppi_in_3[10]; // Interrupt ID = 26
/*GENERATED*/        cluster0.CNTHPSIRQ[0] => gic_iri.ppi_in_0[4]; // Interrupt ID = 20
/*GENERATED*/        cluster0.CNTHPSIRQ[1] => gic_iri.ppi_in_1[4]; // Interrupt ID = 20
/*GENERATED*/        cluster0.CNTHPSIRQ[2] => gic_iri.ppi_in_2[4]; // Interrupt ID = 20
/*GENERATED*/        cluster0.CNTHPSIRQ[3] => gic_iri.ppi_in_3[4]; // Interrupt ID = 20
/*GENERATED*/        cluster0.CNTHVIRQ[0] => gic_iri.ppi_in_0[12]; // Interrupt ID = 28
/*GENERATED*/        cluster0.CNTHVIRQ[1] => gic_iri.ppi_in_1[12]; // Interrupt ID = 28
/*GENERATED*/        cluster0.CNTHVIRQ[2] => gic_iri.ppi_in_2[12]; // Interrupt ID = 28
/*GENERATED*/        cluster0.CNTHVIRQ[3] => gic_iri.ppi_in_3[12]; // Interrupt ID = 28
/*GENERATED*/        cluster0.CNTHVSIRQ[0] => gic_iri.ppi_in_0[3]; // Interrupt ID = 19
/*GENERATED*/        cluster0.CNTHVSIRQ[1] => gic_iri.ppi_in_1[3]; // Interrupt ID = 19
/*GENERATED*/        cluster0.CNTHVSIRQ[2] => gic_iri.ppi_in_2[3]; // Interrupt ID = 19
/*GENERATED*/        cluster0.CNTHVSIRQ[3] => gic_iri.ppi_in_3[3]; // Interrupt ID = 19
/*GENERATED*/        cluster0.CNTPNSIRQ[0] => gic_iri.ppi_in_0[14]; // Interrupt ID = 30
/*GENERATED*/        cluster0.CNTPNSIRQ[1] => gic_iri.ppi_in_1[14]; // Interrupt ID = 30
/*GENERATED*/        cluster0.CNTPNSIRQ[2] => gic_iri.ppi_in_2[14]; // Interrupt ID = 30
/*GENERATED*/        cluster0.CNTPNSIRQ[3] => gic_iri.ppi_in_3[14]; // Interrupt ID = 30
/*GENERATED*/        cluster0.CNTPSIRQ[0] => gic_iri.ppi_in_0[13]; // Interrupt ID = 29
/*GENERATED*/        cluster0.CNTPSIRQ[1] => gic_iri.ppi_in_1[13]; // Interrupt ID = 29
/*GENERATED*/        cluster0.CNTPSIRQ[2] => gic_iri.ppi_in_2[13]; // Interrupt ID = 29
/*GENERATED*/        cluster0.CNTPSIRQ[3] => gic_iri.ppi_in_3[13]; // Interrupt ID = 29
/*GENERATED*/        cluster0.CNTVIRQ[0] => gic_iri.ppi_in_0[11]; // Interrupt ID = 27
/*GENERATED*/        cluster0.CNTVIRQ[1] => gic_iri.ppi_in_1[11]; // Interrupt ID = 27
/*GENERATED*/        cluster0.CNTVIRQ[2] => gic_iri.ppi_in_2[11]; // Interrupt ID = 27
/*GENERATED*/        cluster0.CNTVIRQ[3] => gic_iri.ppi_in_3[11]; // Interrupt ID = 27
/*GENERATED*/        cluster0.commirq[0] => gic_iri.ppi_in_0[6]; // Interrupt ID = 22
/*GENERATED*/        cluster0.commirq[1] => gic_iri.ppi_in_1[6]; // Interrupt ID = 22
/*GENERATED*/        cluster0.commirq[2] => gic_iri.ppi_in_2[6]; // Interrupt ID = 22
/*GENERATED*/        cluster0.commirq[3] => gic_iri.ppi_in_3[6]; // Interrupt ID = 22
/*GENERATED*/        cluster0.cti[0] => v8ect.cti[0];
/*GENERATED*/        cluster0.cti[1] => v8ect.cti[1];
/*GENERATED*/        cluster0.cti[2] => v8ect.cti[2];
/*GENERATED*/        cluster0.cti[3] => v8ect.cti[3];
/*GENERATED*/        cluster0.ctidbgirq[0] => gic_iri.ppi_in_0[8]; // Interrupt ID = 24
/*GENERATED*/        cluster0.ctidbgirq[1] => gic_iri.ppi_in_1[8]; // Interrupt ID = 24
/*GENERATED*/        cluster0.ctidbgirq[2] => gic_iri.ppi_in_2[8]; // Interrupt ID = 24
/*GENERATED*/        cluster0.ctidbgirq[3] => gic_iri.ppi_in_3[8]; // Interrupt ID = 24
/*GENERATED*/        cluster0.dbgnopwrdwn[0] => pctl.dbgnopwrdwn[0];
/*GENERATED*/        cluster0.dbgnopwrdwn[1] => pctl.dbgnopwrdwn[1];
/*GENERATED*/        cluster0.dbgnopwrdwn[2] => pctl.dbgnopwrdwn[2];
/*GENERATED*/        cluster0.dbgnopwrdwn[3] => pctl.dbgnopwrdwn[3];
/*GENERATED*/        cluster0.event => cluster1.event;
/*GENERATED*/        cluster0.pmbirq[0] => gic_iri.ppi_in_0[5]; // Interrupt ID = 21
/*GENERATED*/        cluster0.pmbirq[1] => gic_iri.ppi_in_1[5]; // Interrupt ID = 21
/*GENERATED*/        cluster0.pmbirq[2] => gic_iri.ppi_in_2[5]; // Interrupt ID = 21
/*GENERATED*/        cluster0.pmbirq[3] => gic_iri.ppi_in_3[5]; // Interrupt ID = 21
/*GENERATED*/        cluster0.pmuirq[0] => gic_iri.ppi_in_0[7]; // Interrupt ID = 23
/*GENERATED*/        cluster0.pmuirq[0] => self.spis[60];
/*GENERATED*/        cluster0.pmuirq[1] => gic_iri.ppi_in_1[7]; // Interrupt ID = 23
/*GENERATED*/        cluster0.pmuirq[1] => self.spis[61];
/*GENERATED*/        cluster0.pmuirq[2] => gic_iri.ppi_in_2[7]; // Interrupt ID = 23
/*GENERATED*/        cluster0.pmuirq[2] => self.spis[62];
/*GENERATED*/        cluster0.pmuirq[3] => gic_iri.ppi_in_3[7]; // Interrupt ID = 23
/*GENERATED*/        cluster0.pmuirq[3] => self.spis[63];
/*GENERATED*/        cluster0.pvbus_m0 => cluster0_labeller.pvbus_s;
/*GENERATED*/        cluster0.standbywfi[0] => pctl.standbywfi[0];
/*GENERATED*/        cluster0.standbywfi[1] => pctl.standbywfi[1];
/*GENERATED*/        cluster0.standbywfi[2] => pctl.standbywfi[2];
/*GENERATED*/        cluster0.standbywfi[3] => pctl.standbywfi[3];
/*GENERATED*/        cluster0.standbywfil2 => pctl.standbywfil2[0];
/*GENERATED*/        cluster0.ticks => bp.cluster0_ticks;
/*GENERATED*/        cluster0.vcpumntirq[0] => gic_iri.ppi_in_0[9]; // Interrupt ID = 25
/*GENERATED*/        cluster0.vcpumntirq[1] => gic_iri.ppi_in_1[9]; // Interrupt ID = 25
/*GENERATED*/        cluster0.vcpumntirq[2] => gic_iri.ppi_in_2[9]; // Interrupt ID = 25
/*GENERATED*/        cluster0.vcpumntirq[3] => gic_iri.ppi_in_3[9]; // Interrupt ID = 25
/*GENERATED*/        cluster0_labeller.pvbus_m => cci400.pvbus_s_ace_3;
/*GENERATED*/        cluster1.CNTHPIRQ[0] => gic_iri.ppi_in_4[10]; // Interrupt ID = 26
/*GENERATED*/        cluster1.CNTHPIRQ[1] => gic_iri.ppi_in_5[10]; // Interrupt ID = 26
/*GENERATED*/        cluster1.CNTHPIRQ[2] => gic_iri.ppi_in_6[10]; // Interrupt ID = 26
/*GENERATED*/        cluster1.CNTHPIRQ[3] => gic_iri.ppi_in_7[10]; // Interrupt ID = 26
/*GENERATED*/        cluster1.CNTHPSIRQ[0] => gic_iri.ppi_in_4[4]; // Interrupt ID = 20
/*GENERATED*/        cluster1.CNTHPSIRQ[1] => gic_iri.ppi_in_5[4]; // Interrupt ID = 20
/*GENERATED*/        cluster1.CNTHPSIRQ[2] => gic_iri.ppi_in_6[4]; // Interrupt ID = 20
/*GENERATED*/        cluster1.CNTHPSIRQ[3] => gic_iri.ppi_in_7[4]; // Interrupt ID = 20
/*GENERATED*/        cluster1.CNTHVIRQ[0] => gic_iri.ppi_in_4[12]; // Interrupt ID = 28
/*GENERATED*/        cluster1.CNTHVIRQ[1] => gic_iri.ppi_in_5[12]; // Interrupt ID = 28
/*GENERATED*/        cluster1.CNTHVIRQ[2] => gic_iri.ppi_in_6[12]; // Interrupt ID = 28
/*GENERATED*/        cluster1.CNTHVIRQ[3] => gic_iri.ppi_in_7[12]; // Interrupt ID = 28
/*GENERATED*/        cluster1.CNTHVSIRQ[0] => gic_iri.ppi_in_4[3]; // Interrupt ID = 19
/*GENERATED*/        cluster1.CNTHVSIRQ[1] => gic_iri.ppi_in_5[3]; // Interrupt ID = 19
/*GENERATED*/        cluster1.CNTHVSIRQ[2] => gic_iri.ppi_in_6[3]; // Interrupt ID = 19
/*GENERATED*/        cluster1.CNTHVSIRQ[3] => gic_iri.ppi_in_7[3]; // Interrupt ID = 19
/*GENERATED*/        cluster1.CNTPNSIRQ[0] => gic_iri.ppi_in_4[14]; // Interrupt ID = 30
/*GENERATED*/        cluster1.CNTPNSIRQ[1] => gic_iri.ppi_in_5[14]; // Interrupt ID = 30
/*GENERATED*/        cluster1.CNTPNSIRQ[2] => gic_iri.ppi_in_6[14]; // Interrupt ID = 30
/*GENERATED*/        cluster1.CNTPNSIRQ[3] => gic_iri.ppi_in_7[14]; // Interrupt ID = 30
/*GENERATED*/        cluster1.CNTPSIRQ[0] => gic_iri.ppi_in_4[13]; // Interrupt ID = 29
/*GENERATED*/        cluster1.CNTPSIRQ[1] => gic_iri.ppi_in_5[13]; // Interrupt ID = 29
/*GENERATED*/        cluster1.CNTPSIRQ[2] => gic_iri.ppi_in_6[13]; // Interrupt ID = 29
/*GENERATED*/        cluster1.CNTPSIRQ[3] => gic_iri.ppi_in_7[13]; // Interrupt ID = 29
/*GENERATED*/        cluster1.CNTVIRQ[0] => gic_iri.ppi_in_4[11]; // Interrupt ID = 27
/*GENERATED*/        cluster1.CNTVIRQ[1] => gic_iri.ppi_in_5[11]; // Interrupt ID = 27
/*GENERATED*/        cluster1.CNTVIRQ[2] => gic_iri.ppi_in_6[11]; // Interrupt ID = 27
/*GENERATED*/        cluster1.CNTVIRQ[3] => gic_iri.ppi_in_7[11]; // Interrupt ID = 27
/*GENERATED*/        cluster1.commirq[0] => gic_iri.ppi_in_4[6]; // Interrupt ID = 22
/*GENERATED*/        cluster1.commirq[1] => gic_iri.ppi_in_5[6]; // Interrupt ID = 22
/*GENERATED*/        cluster1.commirq[2] => gic_iri.ppi_in_6[6]; // Interrupt ID = 22
/*GENERATED*/        cluster1.commirq[3] => gic_iri.ppi_in_7[6]; // Interrupt ID = 22
/*GENERATED*/        cluster1.cti[0] => v8ect.cti[4];
/*GENERATED*/        cluster1.cti[1] => v8ect.cti[5];
/*GENERATED*/        cluster1.cti[2] => v8ect.cti[6];
/*GENERATED*/        cluster1.cti[3] => v8ect.cti[7];
/*GENERATED*/        cluster1.ctidbgirq[0] => gic_iri.ppi_in_4[8]; // Interrupt ID = 24
/*GENERATED*/        cluster1.ctidbgirq[1] => gic_iri.ppi_in_5[8]; // Interrupt ID = 24
/*GENERATED*/        cluster1.ctidbgirq[2] => gic_iri.ppi_in_6[8]; // Interrupt ID = 24
/*GENERATED*/        cluster1.ctidbgirq[3] => gic_iri.ppi_in_7[8]; // Interrupt ID = 24
/*GENERATED*/        cluster1.dbgnopwrdwn[0] => pctl.dbgnopwrdwn[4];
/*GENERATED*/        cluster1.dbgnopwrdwn[1] => pctl.dbgnopwrdwn[5];
/*GENERATED*/        cluster1.dbgnopwrdwn[2] => pctl.dbgnopwrdwn[6];
/*GENERATED*/        cluster1.dbgnopwrdwn[3] => pctl.dbgnopwrdwn[7];
/*GENERATED*/        cluster1.pmbirq[0] => gic_iri.ppi_in_4[5]; // Interrupt ID = 21
/*GENERATED*/        cluster1.pmbirq[1] => gic_iri.ppi_in_5[5]; // Interrupt ID = 21
/*GENERATED*/        cluster1.pmbirq[2] => gic_iri.ppi_in_6[5]; // Interrupt ID = 21
/*GENERATED*/        cluster1.pmbirq[3] => gic_iri.ppi_in_7[5]; // Interrupt ID = 21
/*GENERATED*/        cluster1.pmuirq[0] => gic_iri.ppi_in_4[7]; // Interrupt ID = 23
/*GENERATED*/        cluster1.pmuirq[0] => self.spis[64];
/*GENERATED*/        cluster1.pmuirq[1] => gic_iri.ppi_in_5[7]; // Interrupt ID = 23
/*GENERATED*/        cluster1.pmuirq[1] => self.spis[65];
/*GENERATED*/        cluster1.pmuirq[2] => gic_iri.ppi_in_6[7]; // Interrupt ID = 23
/*GENERATED*/        cluster1.pmuirq[2] => self.spis[66];
/*GENERATED*/        cluster1.pmuirq[3] => gic_iri.ppi_in_7[7]; // Interrupt ID = 23
/*GENERATED*/        cluster1.pmuirq[3] => self.spis[67];
/*GENERATED*/        cluster1.pvbus_m0 => cluster1_labeller.pvbus_s;
/*GENERATED*/        cluster1.standbywfi[0] => pctl.standbywfi[4];
/*GENERATED*/        cluster1.standbywfi[1] => pctl.standbywfi[5];
/*GENERATED*/        cluster1.standbywfi[2] => pctl.standbywfi[6];
/*GENERATED*/        cluster1.standbywfi[3] => pctl.standbywfi[7];
/*GENERATED*/        cluster1.standbywfil2 => pctl.standbywfil2[1];
/*GENERATED*/        cluster1.ticks => bp.cluster1_ticks;
/*GENERATED*/        cluster1.vcpumntirq[0] => gic_iri.ppi_in_4[9]; // Interrupt ID = 25
/*GENERATED*/        cluster1.vcpumntirq[1] => gic_iri.ppi_in_5[9]; // Interrupt ID = 25
/*GENERATED*/        cluster1.vcpumntirq[2] => gic_iri.ppi_in_6[9]; // Interrupt ID = 25
/*GENERATED*/        cluster1.vcpumntirq[3] => gic_iri.ppi_in_7[9]; // Interrupt ID = 25
/*GENERATED*/        dbg_pvbusdecoder.pvbus_m_range[0x0000..0x0fff] => cs_rom.pvbus_s;
/*GENERATED*/        dbg_pvbusdecoder.pvbus_m_range[0x02000000..0x023fffff] => cluster0.dev_debug_s[0x0..0x003fffff];
/*GENERATED*/        dbg_pvbusdecoder.pvbus_m_range[0x03000000..0x033fffff] => cluster1.dev_debug_s[0x0..0x003fffff];
/*GENERATED*/        gic_iri.pvbus_m => cci400.pvbus_s_ace_lite_plus_dvm_2;
/*GENERATED*/        gic_iri.redistributor_m[0] => cluster0.gicv3_redistributor_s[0];
/*GENERATED*/        gic_iri.redistributor_m[112] => cluster1.gicv3_redistributor_s[3];
/*GENERATED*/        gic_iri.redistributor_m[16] => cluster0.gicv3_redistributor_s[1];
/*GENERATED*/        gic_iri.redistributor_m[32] => cluster0.gicv3_redistributor_s[2];
/*GENERATED*/        gic_iri.redistributor_m[48] => cluster0.gicv3_redistributor_s[3];
/*GENERATED*/        gic_iri.redistributor_m[64] => cluster1.gicv3_redistributor_s[0];
/*GENERATED*/        gic_iri.redistributor_m[80] => cluster1.gicv3_redistributor_s[1];
/*GENERATED*/        gic_iri.redistributor_m[96] => cluster1.gicv3_redistributor_s[2];
/*GENERATED*/        gic_iri.wake_request[0] => pctl.wakerequest[0];
/*GENERATED*/        gic_iri.wake_request[1] => pctl.wakerequest[1];
/*GENERATED*/        gic_iri.wake_request[2] => pctl.wakerequest[2];
/*GENERATED*/        gic_iri.wake_request[3] => pctl.wakerequest[3];
/*GENERATED*/        gic_iri.wake_request[4] => pctl.wakerequest[4];
/*GENERATED*/        gic_iri.wake_request[5] => pctl.wakerequest[5];
/*GENERATED*/        gic_iri.wake_request[6] => pctl.wakerequest[6];
/*GENERATED*/        gic_iri.wake_request[7] => pctl.wakerequest[7];
/*GENERATED*/        mmdbg_pvbusdecoder.pvbus_m_range[0x0000..0x0fff] => cs_rom.pvbus_s;
/*GENERATED*/        mmdbg_pvbusdecoder.pvbus_m_range[0x02000000..0x023fffff] => cluster0.memorymapped_debug_s[0x0..0x003fffff];
/*GENERATED*/        mmdbg_pvbusdecoder.pvbus_m_range[0x03000000..0x033fffff] => cluster1.memorymapped_debug_s[0x0..0x003fffff];
/*GENERATED*/        pctl.cpuporeset[0] => cluster0.cpuporeset[0];
/*GENERATED*/        pctl.cpuporeset[0] => cluster0.external_trace_reset[0];
/*GENERATED*/        pctl.cpuporeset[0] => cluster0.presetdbg[0];
/*GENERATED*/        pctl.cpuporeset[0] => cluster0.reset[0];
/*GENERATED*/        pctl.cpuporeset[0] => cluster0.trace_unit_reset[0];
/*GENERATED*/        pctl.cpuporeset[1] => cluster0.cpuporeset[1];
/*GENERATED*/        pctl.cpuporeset[1] => cluster0.external_trace_reset[1];
/*GENERATED*/        pctl.cpuporeset[1] => cluster0.presetdbg[1];
/*GENERATED*/        pctl.cpuporeset[1] => cluster0.reset[1];
/*GENERATED*/        pctl.cpuporeset[1] => cluster0.trace_unit_reset[1];
/*GENERATED*/        pctl.cpuporeset[2] => cluster0.cpuporeset[2];
/*GENERATED*/        pctl.cpuporeset[2] => cluster0.external_trace_reset[2];
/*GENERATED*/        pctl.cpuporeset[2] => cluster0.presetdbg[2];
/*GENERATED*/        pctl.cpuporeset[2] => cluster0.reset[2];
/*GENERATED*/        pctl.cpuporeset[2] => cluster0.trace_unit_reset[2];
/*GENERATED*/        pctl.cpuporeset[3] => cluster0.cpuporeset[3];
/*GENERATED*/        pctl.cpuporeset[3] => cluster0.external_trace_reset[3];
/*GENERATED*/        pctl.cpuporeset[3] => cluster0.presetdbg[3];
/*GENERATED*/        pctl.cpuporeset[3] => cluster0.reset[3];
/*GENERATED*/        pctl.cpuporeset[3] => cluster0.trace_unit_reset[3];
/*GENERATED*/        pctl.cpuporeset[4] => cluster1.cpuporeset[0];
/*GENERATED*/        pctl.cpuporeset[4] => cluster1.external_trace_reset[0];
/*GENERATED*/        pctl.cpuporeset[4] => cluster1.presetdbg[0];
/*GENERATED*/        pctl.cpuporeset[4] => cluster1.reset[0];
/*GENERATED*/        pctl.cpuporeset[4] => cluster1.trace_unit_reset[0];
/*GENERATED*/        pctl.cpuporeset[5] => cluster1.cpuporeset[1];
/*GENERATED*/        pctl.cpuporeset[5] => cluster1.external_trace_reset[1];
/*GENERATED*/        pctl.cpuporeset[5] => cluster1.presetdbg[1];
/*GENERATED*/        pctl.cpuporeset[5] => cluster1.reset[1];
/*GENERATED*/        pctl.cpuporeset[5] => cluster1.trace_unit_reset[1];
/*GENERATED*/        pctl.cpuporeset[6] => cluster1.cpuporeset[2];
/*GENERATED*/        pctl.cpuporeset[6] => cluster1.external_trace_reset[2];
/*GENERATED*/        pctl.cpuporeset[6] => cluster1.presetdbg[2];
/*GENERATED*/        pctl.cpuporeset[6] => cluster1.reset[2];
/*GENERATED*/        pctl.cpuporeset[6] => cluster1.trace_unit_reset[2];
/*GENERATED*/        pctl.cpuporeset[7] => cluster1.cpuporeset[3];
/*GENERATED*/        pctl.cpuporeset[7] => cluster1.external_trace_reset[3];
/*GENERATED*/        pctl.cpuporeset[7] => cluster1.presetdbg[3];
/*GENERATED*/        pctl.cpuporeset[7] => cluster1.reset[3];
/*GENERATED*/        pctl.cpuporeset[7] => cluster1.trace_unit_reset[3];
/*GENERATED*/        pctl.l2reset[0] => cluster0.l2reset;
/*GENERATED*/        pctl.l2reset[1] => cluster1.l2reset;
/*GENERATED*/        pctl.system_reset => bp.system_reset;
/*GENERATED*/        pctl.system_reset => gic_iri._reset;
/*GENERATED*/        pctl.system_reset => gic_iri.po_reset;
/*GENERATED*/        self.cluster0_l2reset => cci400.lint_ace_3_reset_state;
/*GENERATED*/        self.gic_distributor_spi_in => gic_iri.spi_in;
/*GENERATED*/        
/*GENERATED*/        
/*GENERATED*/    }
/*GENERATED*/    
/*GENERATED*/    behavior init
/*GENERATED*/    {
/*GENERATED*/        composition.init();
/*GENERATED*/        if (NUM_CORES0 > 0)
/*GENERATED*/        {
/*GENERATED*/            cluster0.spiden.setValue( spiden ? sg::Signal::Set : sg::Signal::Clear );
/*GENERATED*/            cluster0.spniden.setValue( spniden ? sg::Signal::Set : sg::Signal::Clear );
/*GENERATED*/            cluster0.niden.setValue( niden ? sg::Signal::Set : sg::Signal::Clear );
/*GENERATED*/            cluster0.dbgen.setValue( dbgen ? sg::Signal::Set : sg::Signal::Clear );
/*GENERATED*/        }
/*GENERATED*/        if (NUM_CORES1 > 0)
/*GENERATED*/        {
/*GENERATED*/            cluster1.spiden.setValue( spiden ? sg::Signal::Set : sg::Signal::Clear );
/*GENERATED*/            cluster1.spniden.setValue( spniden ? sg::Signal::Set : sg::Signal::Clear );
/*GENERATED*/            cluster1.niden.setValue( niden ? sg::Signal::Set : sg::Signal::Clear );
/*GENERATED*/            cluster1.dbgen.setValue( dbgen ? sg::Signal::Set : sg::Signal::Clear );
/*GENERATED*/        }
/*GENERATED*/    }
/*GENERATED*/    
/*GENERATED*/    behavior reset(int level)
/*GENERATED*/    {
/*GENERATED*/        composition.reset(level);
/*GENERATED*/        
/*GENERATED*/    }
/*GENERATED*/    
/*GENERATED*/    behaviour interconnect()
/*GENERATED*/    {
/*GENERATED*/        composition.interconnect();
/*GENERATED*/        if ((NUM_CORES1 > 0)) (cluster1_l2reset).connectTo((cci400)->findPort("lint_ace_4_reset_state"));
/*GENERATED*/        if ((NUM_CORES1 > 0)) (cluster1_labeller)->findPort("pvbus_m").connectTo((cci400)->findPort("pvbus_s_ace_4"));
/*GENERATED*/    }
/*GENERATED*/    
/*GENERATED*/}
/*GENERATED*/
